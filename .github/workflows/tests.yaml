name: Tests

on:
  - push
  - pull_request

jobs:
  android:
    name: Android
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        api-level: [34]
        #rn-version: ['0.75', '0.74', '0.73', '0.72', '0.71']
        # arch: ['new', 'old']
        rn-version: ['0.75']
        arch: ['old']

    steps:
      - uses: actions/checkout@v4

      - name: df
        run: |
          df -h

      - name: ADB Wait For Device
        run: |
          echo "MOO"
          find $ANDROID_HOME -name adb

        timeout-minutes: 3

      # - name: Free Disk Space (Ubuntu)
      #   uses: jlumbroso/free-disk-space@main
      #   with:
      #     android: false
      #     # large-packages: true
      #     # swap-storage: true

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/setup-node@v4

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          # TODO: Remove this after we merge
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/monorepo' }}

      - name: Setup yarn
        run: |
          corepack enable

      - uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --immutable

      - name: AVD Deps
        run: |
          sudo apt update
          sudo apt-get install -y libpulse0 libgl1 adb

      - name: Build
        run: |
          yarn prepare

      - name: SDK cache
        uses: actions/cache@v4
        id: sdk-cache
        with:
          path: |
            $ANDROID_HOME/system-images
          key: sdk-${{ matrix.api-level }}

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: SKDs
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-${{ matrix.api-level }};default;x86_64"
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Emulator
        run: |
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n Pixel_API_${{ matrix.api-level }} --device 'pixel_6_pro' --package "system-images;android-${{ matrix.api-level }};default;x86_64" --sdcard 512M
          $ANDROID_HOME/emulator/emulator -memory 4096 -avd Pixel_API_${{ matrix.api-level }} -wipe-data -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -camera-back none &

      - name: ADB Wait For Device
        run: |
          adb wait-for-any-device
        timeout-minutes: 3

      - name: Set up RN version
        run: |
          cd packages/icon-explorer

          ./set-rn-version.sh ${{ matrix.arch }} ${{ matrix.rn-version }}

      - name: Build App
        run: |
          cd packages/icon-explorer
          yarn test:android:build

      - name: Run tests
        run: |
          cd packages/icon-explorer
          yarn test:android:run

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.arch }}-${{ matrix.rn-version }}-android
          path: packages/icon-explorer/.owl
          include-hidden-files: true

      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JEST Tests android - ${{ matrix.arch }} ${{ matrix.rn-version }}
          path: packages/icon-explorer/.owl/report/*.xml
          reporter: jest-junit

  ios:
    name: iOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        # rn-version: ['0.75', '0.74', '0.73', '0.72', '0.71']
        # arch: ['new', 'old']
        rn-version: ['0.75']
        arch: ['old']

    steps:
      - uses: actions/checkout@v4


      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - uses: actions/setup-node@v4

      - name: Setup yarn
        run: |
          corepack enable

      - uses: bahmutov/npm-install@v1
        with:
          install-command: yarn --immutable

      - name: Build
        run: |
          xcodebuild -version
          yarn prepare

      - name: Set up RN version
        run: |
          cd packages/icon-explorer

          ./set-rn-version.sh ${{ matrix.arch }} ${{ matrix.rn-version }}

      - name: Run simulatpr
        uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 15'
          os_version: '>=15.0'

      - name: Build App
        run: |
          cd packages/icon-explorer
          # Due to react-native-test-app not bundling
          yarn build:ios:owl
          if [ "${{ matrix.arch }}" = "new" ]; then
            NO_FLIPPER=1 RCT_NEW_ARCH_ENABLED=1 pod update --project-directory=ios
          else
            NO_FLIPPER=1 RCT_NEW_ARCH_ENABLED=0 pod update --project-directory=ios
          fi
          yarn test:ios:build

      - name: Run tests
        run: |
          cd packages/icon-explorer
          yarn test:ios:run

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.arch }}-${{ matrix.rn-version }}-ios
          path: packages/icon-explorer/.owl
          include-hidden-files: true

      - uses: dorny/test-reporter@v1
        if: always()
        with:
          name: JEST Tests ios - ${{ matrix.arch }} ${{ matrix.rn-version }}
          path: packages/icon-explorer/.owl/report/*.xml
          reporter: jest-junit
